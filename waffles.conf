# Get the absolute directory where this file is located.
# Perhaps there's a better way to do this?
WAFFLES_DIR=$(readlink -f "${BASH_SOURCE%/*}")

# WAFFLES_LIB_DIR is where resources and functions are stored.
WAFFLES_LIB_DIR="${MODULE_DIR:-$WAFFLES_DIR/lib}"

# WAFFLES_SITE_DIR is where roles and profiles are defined.
# Role commands/resources are placed in site/roles/role_name.sh.
# Role profiles are placed in site/profiles/profile/
# Role data is placed in site/data/role_name.sh
WAFFLES_SITE_DIR="${SITE_DIR:-$WAFFLES_DIR/site}"

# When WAFFLES_EXIT_ON_ERROR is true, the entire run will halt if an error
# is found. If it is false, the run will continue.
WAFFLES_EXIT_ON_ERROR="${EXIT_ON_ERROR}"

# When WAFFLES_EXIT_ON_DUPLICATE_RESOURCE is true, the entire run will halt
# as soon as a duplicate resource is found. If it is false, the run will
# continue.
WAFFLES_EXIT_ON_DUPLICATE_RESOURCE="${EXIT_ON_DUPLICATE_RESOURCE}"

# WAFFLES_SSH_USER is the remote user to use when deploying remotely (push)
WAFFLES_SSH_USER="root"

# WAFFLES_REMOTE_SUDO determines if "sudo" should be run when deploying remotely (push)
WAFFLES_REMOTE_SUDO="false"

# WAFFLES_REMOTE_DIR is the remote directory to deploy to (push)
WAFFLES_REMOTE_DIR="/etc/waffles"
